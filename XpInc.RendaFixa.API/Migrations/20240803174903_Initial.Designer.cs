// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XpInc.RendaFixa.API.Data.Context;

#nullable disable

namespace XpInc.RendaFixa.API.Migrations
{
    [DbContext(typeof(RendaFixaContext))]
    [Migration("20240803174903_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("XpInc.Core.Messages.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<Guid?>("RendaFixaProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("RendaFixaProdutoId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("XpInc.RendaFixa.API.Models.Entities.RendaFixaProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool>("BaseadoEmCotas")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime");

                    b.Property<int>("Frequencia")
                        .HasColumnType("int");

                    b.Property<int>("Indexador")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("TaxaAdicional")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxaAnual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoTaxa")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioCadastroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorMinimo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("RendaFixaProduto");
                });

            modelBuilder.Entity("XpInc.Core.Messages.Event", b =>
                {
                    b.HasOne("XpInc.RendaFixa.API.Models.Entities.RendaFixaProduto", null)
                        .WithMany("Notificacoes")
                        .HasForeignKey("RendaFixaProdutoId");
                });

            modelBuilder.Entity("XpInc.RendaFixa.API.Models.Entities.RendaFixaProduto", b =>
                {
                    b.Navigation("Notificacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
